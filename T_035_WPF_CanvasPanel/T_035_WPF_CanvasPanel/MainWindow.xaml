<Window x:Class="T_035_WPF_CanvasPanel.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:T_035_WPF_CanvasPanel"
        mc:Ignorable="d"
        Title="MainWindow" Height="350" Width="604">
    <!-- 
    WPF - CanvasPanel
    Canvas panel is the basic layout Panel in
    which the child elements can be positioned 
    explicitly using coordinates that are relative 
    to the Canvas any side such as left, right, top and bottom.

Typically, a Canvas is used for 2D graphic
    elements (such as Ellipse, Rectangle etc.), 
    but not for UI elements because specifying absolute 
    coordinates create trouble while resizing, localizing 
    or scaling your XAML application. The hierarchical 
    inheritance of Canvas class is as follows −
    Commonly Used Properties of Canvas Class
Given below are the most commonly used properties of Canvas.
Commonly Used Methods of Canvas
Given below are the most commonly used methods of Canvas.
Example
The following example shows how to add child elements into a 
    Canvas. The following XAML implementation creates ellipses
    inside a Canvas with different offset properties.
    -->
    <Grid>
        <Canvas Width = "580" Height = "360" >
            <Ellipse Canvas.Left = "30" Canvas.Top = "30"  
            Fill = "Gray" Width = "200" Height = "120" />
            <Ellipse Canvas.Right = "30" Canvas.Top = "30"  
            Fill = "Aqua" Width = "200" Height = "120" />
            <Ellipse Canvas.Left = "30" Canvas.Bottom = "30"  
            Fill = "Gainsboro" Width = "200" Height = "120" />
            <Ellipse Canvas.Right = "30" Canvas.Bottom = "30"  
            Fill = "LightCyan" Width = "200" Height = "120" />
        </Canvas>
    </Grid>
</Window>
