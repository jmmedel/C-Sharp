<Window x:Class="T_046_WPF_Resources.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:T_046_WPF_Resources"
        mc:Ignorable="d"
        Title="MainWindow" Height="350" Width="525">
    <!-- 
    WPF - Resources
    Resources are normally definitions connected with some object that you just anticipate to use more often than once. It is the ability to store data locally for controls or for the current window or globally for the entire applications.

Defining an object as a resource allows us to access it from another place. What it means is that the object can be reused. Resources are defined in resource dictionaries and any object can be defined as a resource effectively making it a shareable asset. A unique key is specified to an XAML resource and with that key, it can be referenced by using a StaticResource markup extension.

Resources can be of two types −

StaticResource
DynamicResource
A StaticResource is a onetime lookup, whereas a DynamicResource works more like a data binding. It remembers that a property is associated with a particular resource key. If the object associated with that key changes, dynamic resource will update the target property.

Example
Here's a simple application for the SolidColorBrush resource.

Let’s create a new WPF project with the name WPFResouces.

Drag two Rectangles and set their properties as shown in the following XAML code.
    -->

    <Window.Resources>
        <SolidColorBrush x:Key = "brushResource" Color = "Blue" />
    </Window.Resources>

    <StackPanel>
        <Rectangle Height = "50" Margin = "20" Fill = "{StaticResource brushResource}" />
        <Rectangle Height = "50" Margin = "20" Fill = "{DynamicResource brushResource}" />
        <Button x:Name = "changeResourceButton"
         Content = "_Change Resource" Click = "changeResourceButton_Click" />
    </StackPanel>
    <!-- 
    In the above XAML code, you can see that one rectangle has StaticResource and the other one has DynamicResource and the color of brushResource is Bisque.

When you compile and execute the code, it will produce the following MainWindow.
    When you click the "Change Resource" button, you will see that the rectangle with DynamicResource will change its color to Red.
    
    -->
</Window>
