<Window x:Class="T_009_WPF_Controls_Buttons.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:T_009_WPF_Controls_Buttons"
        mc:Ignorable="d"
        Title="MainWindow" Height="350" Width="525">
    <!-- 
    The Button class represents the most basic type of button control. The hierarchical inheritance of Button class is as follows −

Hierarchical of Button
Commonly Used Properties of Button Class
Given below are the most commonly used properties of Button.
Commonly Used Methods of Button Class
Given below are the most commonly used methods of Button.
Commonly Used Events of Button Class
Given below are the most commonly used events of Button.
Example
Let’s take a simple example to understand the concepts better. Follow the steps given below −

Open Visual Studio and then Click File > New > Project menu option.

In the New Project dialog box, in the Templates pane, click on Visual C# and in middle pane, select WPF Application.

In the Name box, type WPFButtonControl, and then click OK.

A new WPF project is created.

Drag a Button control from the Toolbox to the WPF design window.

Now click the button and go to the Properties window and set the following properties of the button.

Property	Value
Content	Click Me
Margin	200
Height	20
Width	75
If you look at the XAML window, you will see the following code which is generated by Visual Studio.
    -->
    <Grid>
        <Button x:Name= "button" Content="Click_Me"
                HorizontalAlignment="Left" Margin="194,150,0,0"
                VerticalAlignment="Top" Width="75" Click="button_Click" />
    </Grid>
</Window>
