<Window x:Class="T_041_WPF_RoutedCommands.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:T_041_WPF_RoutedCommands"
        mc:Ignorable="d"
        Title="MainWindow" Height="350" Width="525">
    <!-- 
    WPF - RoutedCommands
    RoutedCommands enable input handling at a more semantic level. These are actually simple instructions as New, Open, Copy, Cut, and Save. These commands are very useful and they can be accessed from a Menu or from a keyboard shortcut. It disables the controls if the command becomes unavailable. The following example defines the commands for Menu items.

Let’s create a new WPF project with the name WPFCommandsInput.

Drag a menu control to a stack panel and set the following properties and commands as shown in the following XAML file.
    
    -->
    <Grid>
        <StackPanel x:Name = "stack" Background = "Transparent">

            <StackPanel.ContextMenu>
                <ContextMenu>
                    <MenuItem Header = "New" Command = "New" />
                    <MenuItem Header = "Open" Command = "Open" />
                    <MenuItem Header = "Save" Command = "Save" />
                </ContextMenu>
            </StackPanel.ContextMenu>

            <Menu>
                <MenuItem Header = "File" >
                    <MenuItem Header = "New" Command = "New" />
                    <MenuItem Header = "Open" Command = "Open" />
                    <MenuItem Header = "Save" Command = "Save" />
                </MenuItem>
            </Menu>

        </StackPanel>

    </Grid>
</Window>
