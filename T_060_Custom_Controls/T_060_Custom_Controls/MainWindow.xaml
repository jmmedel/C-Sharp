<Window x:Class="T_060_Custom_Controls.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:T_060_Custom_Controls"
        mc:Ignorable="d"
        Title="MainWindow" Height="350" Width="525">
    <!-- 
    WPF - Custom Controls
    WPF applications allows to create custom controls which makes it very easy to create feature-rich and customizable controls. Custom controls are used when all the built-in controls provided by Microsoft are not fulfilling your criteria or you don’t want to pay for third-party controls.

In this chapter, you will learn how to create custom controls. Before we start taking a look at Custom Controls, let's take a quick look at a User Control first.

User Control
User Controls provide a way to collect and combine different built-in controls together and package them into re-usable XAML. User controls are used in following scenarios −

If the control consists of existing controls, i.e., you can create a single control of multiple, already existing controls.

If the control doesn't need support for theming. User Controls do not support complex customization, control templates, and difficult to style.

If a developer prefers to write controls using the code-behind model where a view and then a direct code behind for event handlers.

You won't be sharing your control across applications.

Example
Let’s go to an example of User control and follow the steps given below.

Create a new WPF project and then right-click on your solution and select Add > New Item...
    he following window will open. Now select User Control (WPF) and name it MyUserControl.

New Item in User Controls
Click the Add button and you will see that two new files (MyUserControl.xaml and MyUserControl.cs) will be added in your solution.

Here is the XAML code in which a button and a text box is created with some properties in MyUserControl.xaml file.
    -->
    <Grid>
        <local:MyUserControl/>
    </Grid>
   <!-- 
    Custom Controls
A custom control is a class which offers its own style and template which are normally defined in generic.xaml. Custom controls are used in the following scenarios −

If the control doesn't exist and you have to create it from scratch.

If you want to extend or add functionality to a preexisting control by adding an extra property or an extra functionality to fit your specific scenario.

If your controls need to support theming and styling.

If you want to share your control across applications.
    -->
</Window>
